name: Performance Benchmarks

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'benches/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'benches/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  workflow_dispatch:

jobs:
  benchmark:
    name: Run Performance Benchmarks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        components: rustfmt, clippy
        
    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-bench-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-bench-
          ${{ runner.os }}-cargo-
    
    - name: Install criterion dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gnuplot
    
    - name: Run benchmarks
      run: |
        cargo bench --bench serde_qs_benchmarks -- --output-format json | tee benchmark_results.json
    
    - name: Store benchmark results
      uses: benchmark-action/github-action-benchmark@v1
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        tool: 'cargo'
        output-file-path: benchmark_results.json
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true
        comment-on-alert: true
        alert-threshold: '110%'
        fail-on-alert: false
        
    - name: Compare benchmark results on PR
      uses: benchmark-action/github-action-benchmark@v1
      if: github.event_name == 'pull_request'
      with:
        tool: 'cargo'
        output-file-path: benchmark_results.json
        github-token: ${{ secrets.GITHUB_TOKEN }}
        comment-on-alert: true
        alert-threshold: '110%'
        fail-on-alert: false
        
    - name: Upload benchmark artifacts
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: |
          benchmark_results.json
          target/criterion/
        retention-days: 30

  benchmark-comparison:
    name: Benchmark Comparison Report
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: benchmark
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
        
    - name: Download benchmark artifacts
      uses: actions/download-artifact@v4
      with:
        name: benchmark-results
        
    - name: Generate performance report
      run: |
        echo "## 🚀 Performance Benchmark Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Benchmarks have been executed for this PR. Key findings:" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Quick Overview" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ All benchmarks completed successfully" >> $GITHUB_STEP_SUMMARY
        echo "- 📊 Detailed results available in the [Criterion reports](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
        echo "- 🔍 Performance regression detection: $(if [ -f benchmark_results.json ]; then echo 'Enabled'; else echo 'Available'; fi)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Benchmark Categories" >> $GITHUB_STEP_SUMMARY
        echo "- **Simple Structures**: Basic serialization/deserialization" >> $GITHUB_STEP_SUMMARY
        echo "- **Complex Structures**: Nested and large data structures" >> $GITHUB_STEP_SUMMARY
        echo "- **Comparisons**: Performance vs. serde_urlencoded" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "> 💡 **Tip**: For detailed performance analysis, check the uploaded artifacts or run \`cargo bench\` locally." >> $GITHUB_STEP_SUMMARY

  performance-regression-check:
    name: Performance Regression Detection
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout PR
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        
    - name: Checkout base branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.base.sha }}
        path: base
        
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
        
    - name: Run baseline benchmarks
      run: |
        cd base
        cargo bench --bench serde_qs_benchmarks -- --output-format json > ../baseline.json
        cd ..
        
    - name: Run PR benchmarks
      run: |
        cargo bench --bench serde_qs_benchmarks -- --output-format json > pr.json
        
    - name: Compare performance
      run: |
        echo "Performance comparison between base and PR:" > comparison.txt
        echo "Base commit: ${{ github.event.pull_request.base.sha }}" >> comparison.txt
        echo "PR commit: ${{ github.event.pull_request.head.sha }}" >> comparison.txt
        echo "" >> comparison.txt
        echo "Note: Detailed comparison requires custom tooling." >> comparison.txt
        echo "Consider using tools like 'cargo-criterion' for more detailed analysis." >> comparison.txt
        
    - name: Upload comparison results
      uses: actions/upload-artifact@v4
      with:
        name: performance-comparison
        path: |
          baseline.json
          pr.json
          comparison.txt